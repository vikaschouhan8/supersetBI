{"remainingRequest":"/Users/maximebeauchemin/code/superset/superset/assets/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/maximebeauchemin/code/superset/superset/assets/node_modules/ts-loader/index.js??ref--5-2!/Users/maximebeauchemin/code/superset/superset/assets/src/query/buildQueryContext.ts","dependencies":[{"path":"/Users/maximebeauchemin/code/superset/superset/assets/src/query/buildQueryContext.ts","mtime":1559113491569},{"path":"/Users/maximebeauchemin/code/superset/superset/assets/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maximebeauchemin/code/superset/superset/assets/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maximebeauchemin/code/superset/superset/assets/node_modules/ts-loader/index.js","mtime":1543302582000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar buildQueryObject_1 = require(\"./buildQueryObject\");\nvar DatasourceKey_1 = require(\"./DatasourceKey\");\nvar WRAP_IN_ARRAY = function (baseQueryObject) { return [baseQueryObject]; };\n// Note: let TypeScript infer the return type\nfunction buildQueryContext(formData, buildQuery) {\n    if (buildQuery === void 0) { buildQuery = WRAP_IN_ARRAY; }\n    return {\n        datasource: new DatasourceKey_1.default(formData.datasource).toObject(),\n        queries: buildQuery(buildQueryObject_1.default(formData)),\n    };\n}\nexports.default = buildQueryContext;\n",{"version":3,"file":"/Users/maximebeauchemin/code/superset/superset/assets/src/query/buildQueryContext.ts","sourceRoot":"","sources":["/Users/maximebeauchemin/code/superset/superset/assets/src/query/buildQueryContext.ts"],"names":[],"mappings":";;AAAA,uDAAmE;AACnE,iDAA4C;AAG5C,IAAM,aAAa,GAAG,UAAC,eAA4B,IAAK,OAAA,CAAC,eAAe,CAAC,EAAjB,CAAiB,CAAC;AAE1E,6CAA6C;AAC7C,SAAwB,iBAAiB,CACvC,QAAkB,EAClB,UAA2E;IAA3E,2BAAA,EAAA,0BAA2E;IAC3E,OAAO;QACL,UAAU,EAAE,IAAI,uBAAa,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,EAAE;QAC7D,OAAO,EAAE,UAAU,CAAC,0BAAgB,CAAC,QAAQ,CAAC,CAAC;KAChD,CAAC;AACJ,CAAC;AAPD,oCAOC","sourcesContent":["import buildQueryObject, { QueryObject } from './buildQueryObject';\nimport DatasourceKey from './DatasourceKey';\nimport FormData from './FormData';\n\nconst WRAP_IN_ARRAY = (baseQueryObject: QueryObject) => [baseQueryObject];\n\n// Note: let TypeScript infer the return type\nexport default function buildQueryContext(\n  formData: FormData,\n  buildQuery: (baseQueryObject: QueryObject) => QueryObject[] = WRAP_IN_ARRAY) {\n  return {\n    datasource: new DatasourceKey(formData.datasource).toObject(),\n    queries: buildQuery(buildQueryObject(formData)),\n  };\n}\n"]}]}