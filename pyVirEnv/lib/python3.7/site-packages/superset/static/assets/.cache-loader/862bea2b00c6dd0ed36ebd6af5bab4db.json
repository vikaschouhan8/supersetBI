{"remainingRequest":"/Users/maximebeauchemin/code/superset/superset/assets/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/maximebeauchemin/code/superset/superset/assets/node_modules/ts-loader/index.js??ref--5-2!/Users/maximebeauchemin/code/superset/superset/assets/src/query/DatasourceKey.ts","dependencies":[{"path":"/Users/maximebeauchemin/code/superset/superset/assets/src/query/DatasourceKey.ts","mtime":1559113491568},{"path":"/Users/maximebeauchemin/code/superset/superset/assets/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maximebeauchemin/code/superset/superset/assets/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maximebeauchemin/code/superset/superset/assets/node_modules/ts-loader/index.js","mtime":1543302582000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DatasourceType;\n(function (DatasourceType) {\n    DatasourceType[\"Table\"] = \"table\";\n    DatasourceType[\"Druid\"] = \"druid\";\n})(DatasourceType || (DatasourceType = {}));\n// Declaration merging with the interface above. No need to redeclare id and type.\nvar DatasourceKey = /** @class */ (function () {\n    function DatasourceKey(key) {\n        var _a = key.split('__'), idStr = _a[0], typeStr = _a[1];\n        this.id = parseInt(idStr, 10);\n        this.type = typeStr === 'table' ? DatasourceType.Table : DatasourceType.Druid;\n    }\n    DatasourceKey.prototype.toString = function () {\n        return this.id + \"__\" + this.type;\n    };\n    DatasourceKey.prototype.toObject = function () {\n        return {\n            id: this.id,\n            type: this.type,\n        };\n    };\n    return DatasourceKey;\n}());\nexports.default = DatasourceKey;\n",{"version":3,"file":"/Users/maximebeauchemin/code/superset/superset/assets/src/query/DatasourceKey.ts","sourceRoot":"","sources":["/Users/maximebeauchemin/code/superset/superset/assets/src/query/DatasourceKey.ts"],"names":[],"mappings":";;AAAA,IAAK,cAGJ;AAHD,WAAK,cAAc;IACjB,iCAAe,CAAA;IACf,iCAAe,CAAA;AACjB,CAAC,EAHI,cAAc,KAAd,cAAc,QAGlB;AAOD,kFAAkF;AAClF;IACE,uBAAY,GAAW;QACf,IAAA,oBAAoC,EAAlC,aAAK,EAAE,eAA2B,CAAC;QAC3C,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QAC9B,IAAI,CAAC,IAAI,GAAG,OAAO,KAAK,OAAO,CAAC,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC;IAChF,CAAC;IAEM,gCAAQ,GAAf;QACE,OAAU,IAAI,CAAC,EAAE,UAAK,IAAI,CAAC,IAAM,CAAC;IACpC,CAAC;IAEM,gCAAQ,GAAf;QACE,OAAO;YACL,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,IAAI,EAAE,IAAI,CAAC,IAAI;SAChB,CAAC;IACJ,CAAC;IACH,oBAAC;AAAD,CAAC,AAjBD,IAiBC","sourcesContent":["enum DatasourceType {\n  Table = 'table',\n  Druid = 'druid',\n}\n\nexport default interface DatasourceKey {\n  id: number;\n  type: DatasourceType;\n}\n\n// Declaration merging with the interface above. No need to redeclare id and type.\nexport default class DatasourceKey {\n  constructor(key: string) {\n    const [ idStr, typeStr ] = key.split('__');\n    this.id = parseInt(idStr, 10);\n    this.type = typeStr === 'table' ? DatasourceType.Table : DatasourceType.Druid;\n  }\n\n  public toString() {\n    return `${this.id}__${this.type}`;\n  }\n\n  public toObject() {\n    return {\n      id: this.id,\n      type: this.type,\n    };\n  }\n}\n"]}]}